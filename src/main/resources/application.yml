# =======================================================================
# APPLICATION CONFIGURATION
# =======================================================================
spring:
  application:
    name: restaurant-reservation-platform
  profiles:
    active: ${ACTIVE_PROFILE:postgres}
  jackson:
    serialization:
      fail-on-empty-beans: false

# =======================================================================
# SERVER CONFIGURATION
# =======================================================================
server:
  port: 8080

# =======================================================================
# LOGGING CONFIGURATION
# =======================================================================
logging:
  level:
    com.innova.restaurant: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# =======================================================================
# JWT CONFIGURATION
# =======================================================================
jwt:
  secret: mySecretKey123456789mySecretKey123456789mySecretKey123456789
  expiration: 86400000

---
# =======================================================================
# DEVELOPMENT PROFILE
# =======================================================================
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/restaurant_db
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  data:
    mongodb:
      host: localhost
      port: 27017
      database: restaurant_db

# Database Selection (jpa or mongo)
app:
  database:
    type: jpa

---
# =======================================================================
# PRODUCTION PROFILE
# =======================================================================
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/restaurant_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://localhost:27017/restaurant_db}

# Database Selection (jpa or mongo)
app:
  database:
    type: jpa

# Logging
logging:
  level:
    com.innova.restaurant: INFO
    org.springframework.security: WARN

---
# =======================================================================
# TEST PROFILE
# =======================================================================
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  data:
    mongodb:
      database: test_restaurant_db

# Database Selection
app:
  database:
    type: jpa

# JWT for Testing
jwt:
  secret: testSecretKey123456789testSecretKey123456789testSecretKey123456789
  expiration: 3600000

---
# =======================================================================
# POSTGRES PROFILE
# =======================================================================
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/restaurant_db}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

# Database Selection
app:
  database:
    type: jpa

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:defaultSecretKey123456789defaultSecretKey123456789}
  expiration: ${JWT_EXPIRATION:86400000}

---
# =======================================================================
# MONGO PROFILE
# =======================================================================
spring:
  config:
    activate:
      on-profile: mongo
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/restaurant_db}
  # Configurar un datasource en memoria para JPA cuando usamos MongoDB
  datasource:
    url: jdbc:h2:mem:mongoMode
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

# Database Selection
app:
  database:
    type: mongo

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:defaultSecretKey123456789defaultSecretKey123456789}
  expiration: ${JWT_EXPIRATION:86400000}