name: ðŸš€ Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Agregar permisos necesarios para GitHub Actions
permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Dmaven.repo.local=.m2/repository -Xmx1024m'

jobs:
  # Job 1: Testing
  test:
    name: ðŸ§ª Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: ðŸ“¦ Checkout code
      uses: actions/checkout@v4

    - name: â˜• Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: ðŸ“‹ Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: ðŸ”§ Set up test environment
      run: |
        export POSTGRES_URL=jdbc:postgresql://localhost:5432/test_db
        export POSTGRES_USER=test_user
        export POSTGRES_PASSWORD=test_password
        export JWT_SECRET=test_secret_for_github_actions
        export JWT_EXPIRATION=86400000
        export MONGODB_URI=mongodb://localhost:27017/test_db

    - name: âœ… Run tests
      run: mvn clean test -Dspring.profiles.active=test

    - name: ðŸ“Š Upload test results (if available)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        retention-days: 7

  # Job 2: Build (simplificado por ahora)
  build:
    name: ðŸ”¨ Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: ðŸ“¦ Checkout code
      uses: actions/checkout@v4

    - name: â˜• Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: ðŸ“‹ Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: ðŸ”¨ Build application
      run: mvn clean package -DskipTests

    - name: ðŸ“¤ Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar
        retention-days: 7

    - name: ðŸŽ‰ Build Success
      run: |
        echo "âœ… Build completed successfully!"
        echo "ðŸ“¦ JAR file created and uploaded as artifact"
        echo "ðŸš€ Render will pick up changes automatically from GitHub"